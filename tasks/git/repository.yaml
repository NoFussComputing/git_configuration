---

- name: Facts - Task Variables
  ansible.builtin.set_fact:
    repo_root: "{{ temp_repo_creation_directory }}/cloned-repo"


- block:

  - name: clean
    ansible.builtin.file:
      path: "{{ repo_root }}"
      mode: directory
      state: absent
    changed_when: "'never' == 'changed'"
    no_log: true # not required
    when: >
      gitlab_api_token is defined
        and
      project_path is defined
    tags:
      - git
      - git_clone
      - git_clone_branch_default


  - name: Clone Repository to default branch
    ansible.builtin.command:
      cmd: "git clone -b {{ default_branch }} https://gitlab-ci-token:{{ gitlab_api_token }}@gitlab.com/{{ project_path }}.git {{ repo_root }}"
    register: git_clone_branch_default
    failed_when: git_clone_branch_default.rc > 0
    changed_when: "'never' == 'changes'"
    no_log: true
    when: >
      gitlab_api_token is defined
        and
      project_path is defined
    tags:
      - git
      - git_clone
      - git_clone_branch_default


  - name: Update git submodules init default branch
    ansible.builtin.shell: >
      cd {{ repo_root }};
      git fetch --all;
      git submodule update --init;
      git submodule foreach git submodule update --init;
    register: git_clone_branch_default_submodule_init
    failed_when: git_clone_branch_default_submodule_init.rc|int > 0
    changed_when: "'never' == 'changes'"
    tags:
      - git
      - git_clone
      - git_clone_branch_default
      - git_clone_branch_default_submodule_init


  when: task_git_clone_branch_default | default(false) | bool


- block:


  - name: Set Git User details
    ansible.builtin.command:
      cmd: git config user.email "{{ git_user_email | default('this-email-@doesnt.need.to.be.valid.com') }}"
      chdir: "{{ repo_root }}"
    register: git_user_set_email
    when: repo_root is defined
    failed_when: git_user_set_email.rc | int != 0
    changed_when: "'never' == 'changes'"
    no_log: true
    tags: 
      - git
      - git_user
      - git_user_set
      - git_user_set_email


  - name: Set Git User details
    ansible.builtin.command:
      cmd: git config user.name "{{ git_user_name | default('a random name not depending on valid value') }}"
      chdir: "{{ repo_root }}"
    register: git_user_set_name
    when: repo_root is defined
    failed_when: git_user_set_name.rc | int != 0
    changed_when: "'never' == 'changes'"
    no_log: true
    tags: 
      - git
      - git_user
      - git_user_set
      - git_user_set_name


  when: task_git_user_set | default(false) | bool

